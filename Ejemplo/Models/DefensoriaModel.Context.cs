//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ejemplo.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class BD_DefensoriaOficio_PruebasEntities : DbContext
    {
        public BD_DefensoriaOficio_PruebasEntities()
            : base("name=BD_DefensoriaOficio_PruebasEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Ca_AccionesProcesales> Ca_AccionesProcesales { get; set; }
        public DbSet<Ca_Causas> Ca_Causas { get; set; }
        public DbSet<Ca_Clasificaciones_Delitos> Ca_Clasificaciones_Delitos { get; set; }
        public DbSet<Ca_ClasificacionJuzgados> Ca_ClasificacionJuzgados { get; set; }
        public DbSet<Ca_ComparecenciaDPJ> Ca_ComparecenciaDPJ { get; set; }
        public DbSet<Ca_ComparecenciaDPM> Ca_ComparecenciaDPM { get; set; }
        public DbSet<Ca_Delitos> Ca_Delitos { get; set; }
        public DbSet<Ca_Domicilios> Ca_Domicilios { get; set; }
        public DbSet<Ca_Ejercicio> Ca_Ejercicio { get; set; }
        public DbSet<Ca_Entes> Ca_Entes { get; set; }
        public DbSet<Ca_Jueces> Ca_Jueces { get; set; }
        public DbSet<Ca_MP> Ca_MP { get; set; }
        public DbSet<Ca_MPAdscrito> Ca_MPAdscrito { get; set; }
        public DbSet<Ca_Nacionalidad> Ca_Nacionalidad { get; set; }
        public DbSet<Ca_Parentesco> Ca_Parentesco { get; set; }
        public DbSet<Ca_Partidos_Judiciales> Ca_Partidos_Judiciales { get; set; }
        public DbSet<ca_Personas> ca_Personas { get; set; }
        public DbSet<Ca_PreguntasFrecuentes> Ca_PreguntasFrecuentes { get; set; }
        public DbSet<ca_Roles> ca_Roles { get; set; }
        public DbSet<Ca_Secretarios_Acuerdo> Ca_Secretarios_Acuerdo { get; set; }
        public DbSet<Ca_Sector> Ca_Sector { get; set; }
        public DbSet<Ca_Sectores_PGJ> Ca_Sectores_PGJ { get; set; }
        public DbSet<CA_SituacionJuridicaDPJ> CA_SituacionJuridicaDPJ { get; set; }
        public DbSet<CA_SituacionJuridicaDPM> CA_SituacionJuridicaDPM { get; set; }
        public DbSet<Ca_Tipo_Cierre> Ca_Tipo_Cierre { get; set; }
        public DbSet<Ca_Tipo_Vialidad> Ca_Tipo_Vialidad { get; set; }
        public DbSet<Ca_TipoCarretera> Ca_TipoCarretera { get; set; }
        public DbSet<Ca_TipoCausa> Ca_TipoCausa { get; set; }
        public DbSet<Ca_TipoCierre> Ca_TipoCierre { get; set; }
        public DbSet<Ca_TipoSentencia> Ca_TipoSentencia { get; set; }
        public DbSet<ca_Usuarios> ca_Usuarios { get; set; }
        public DbSet<De_Acusados> De_Acusados { get; set; }
        public DbSet<De_Acusados_Ofendidos> De_Acusados_Ofendidos { get; set; }
        public DbSet<de_Bitacora> de_Bitacora { get; set; }
        public DbSet<De_Cierre_Expedientes> De_Cierre_Expedientes { get; set; }
        public DbSet<De_Comentario_Seg_Acciones> De_Comentario_Seg_Acciones { get; set; }
        public DbSet<De_Delitos> De_Delitos { get; set; }
        public DbSet<De_Denunciantes> De_Denunciantes { get; set; }
        public DbSet<De_Expedientes_AccionesProcesales> De_Expedientes_AccionesProcesales { get; set; }
        public DbSet<De_Expedientes_Archivos> De_Expedientes_Archivos { get; set; }
        public DbSet<De_Ofendidos> De_Ofendidos { get; set; }
        public DbSet<Logs> Logs { get; set; }
        public DbSet<Ma_Expedientes> Ma_Expedientes { get; set; }
        public DbSet<sysdiagrams> sysdiagrams { get; set; }
        public DbSet<Ta_Parametros> Ta_Parametros { get; set; }
        public DbSet<vAcusados> vAcusados { get; set; }
        public DbSet<vCa_AccionesProcesales> vCa_AccionesProcesales { get; set; }
        public DbSet<vCa_Causas> vCa_Causas { get; set; }
        public DbSet<vCa_Clasificaciones_Delitos> vCa_Clasificaciones_Delitos { get; set; }
        public DbSet<vCa_ClasificacionJuzgados> vCa_ClasificacionJuzgados { get; set; }
        public DbSet<vCa_Delitos> vCa_Delitos { get; set; }
        public DbSet<vCa_Domicilios> vCa_Domicilios { get; set; }
        public DbSet<vCa_Jueces> vCa_Jueces { get; set; }
        public DbSet<vCa_Ministerio_Publico> vCa_Ministerio_Publico { get; set; }
        public DbSet<vCa_Parentesco> vCa_Parentesco { get; set; }
        public DbSet<vCa_Personas> vCa_Personas { get; set; }
        public DbSet<vCa_Roles> vCa_Roles { get; set; }
        public DbSet<vCa_Secretarios_Acuerdo> vCa_Secretarios_Acuerdo { get; set; }
        public DbSet<vCa_Sectores_PGJ> vCa_Sectores_PGJ { get; set; }
        public DbSet<vCa_Tipo_Cierre> vCa_Tipo_Cierre { get; set; }
        public DbSet<vCa_Usuarios> vCa_Usuarios { get; set; }
        public DbSet<vDe_Acusados> vDe_Acusados { get; set; }
        public DbSet<vDe_Bitacora> vDe_Bitacora { get; set; }
        public DbSet<vDe_Delito> vDe_Delito { get; set; }
        public DbSet<vDe_Denunciantes> vDe_Denunciantes { get; set; }
        public DbSet<vDe_Ofendidos> vDe_Ofendidos { get; set; }
        public DbSet<vExpedientes> vExpedientes { get; set; }
        public DbSet<vLoginCiudadano> vLoginCiudadano { get; set; }
        public DbSet<vMa_Expedientes> vMa_Expedientes { get; set; }
        public DbSet<vSeguimientoProceso> vSeguimientoProceso { get; set; }
    
        public virtual ObjectResult<Pa_CambiaAnio_Expediente_Result> Pa_CambiaAnio_Expediente(Nullable<short> anioActual, Nullable<int> idExpediente, Nullable<short> nuevoAnio, ObjectParameter error, ObjectParameter id_ExpedienteN)
        {
            var anioActualParameter = anioActual.HasValue ?
                new ObjectParameter("AnioActual", anioActual) :
                new ObjectParameter("AnioActual", typeof(short));
    
            var idExpedienteParameter = idExpediente.HasValue ?
                new ObjectParameter("IdExpediente", idExpediente) :
                new ObjectParameter("IdExpediente", typeof(int));
    
            var nuevoAnioParameter = nuevoAnio.HasValue ?
                new ObjectParameter("NuevoAnio", nuevoAnio) :
                new ObjectParameter("NuevoAnio", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pa_CambiaAnio_Expediente_Result>("Pa_CambiaAnio_Expediente", anioActualParameter, idExpedienteParameter, nuevoAnioParameter, error, id_ExpedienteN);
        }
    
        public virtual int Pa_LimpiaExpediente(Nullable<short> anio, Nullable<int> idExpediente)
        {
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(short));
    
            var idExpedienteParameter = idExpediente.HasValue ?
                new ObjectParameter("IdExpediente", idExpediente) :
                new ObjectParameter("IdExpediente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Pa_LimpiaExpediente", anioParameter, idExpedienteParameter);
        }
    
        public virtual int pa_StrCero(Nullable<int> xNum, Nullable<int> xLen, ObjectParameter nvaCad)
        {
            var xNumParameter = xNum.HasValue ?
                new ObjectParameter("xNum", xNum) :
                new ObjectParameter("xNum", typeof(int));
    
            var xLenParameter = xLen.HasValue ?
                new ObjectParameter("xLen", xLen) :
                new ObjectParameter("xLen", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pa_StrCero", xNumParameter, xLenParameter, nvaCad);
        }
    
        public virtual int SearchAllTables(string searchStr)
        {
            var searchStrParameter = searchStr != null ?
                new ObjectParameter("SearchStr", searchStr) :
                new ObjectParameter("SearchStr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchAllTables", searchStrParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
